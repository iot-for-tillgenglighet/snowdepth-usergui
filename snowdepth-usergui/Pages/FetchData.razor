@page "/fetchdata"
@using snowdepth_usergui.Data
@inject MeasurementService MeasurementService


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<h1>Registrerade mätvärden</h1>

<p>Nedan listas tidigare registrerade mätvärden gjorda av dig.</p>

@if (forecasts == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<!--map component-->

	<table class="table">
		<thead>
			<tr>
				<th>Datum</th>
				<th>Temperatur (°C)</th>
				<th>Snödjup (mm)</th>
				<th>Karta</th>
				<th>Kommentar</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var forecast in forecasts.OrderByDescending(d => d.Date))
			{
				<tr>
					<td>@forecast.Date.ToString("yyyy-MM-dd HH:mm")</td>
					<td>@forecast.TemperatureC</td>
					<td>@forecast.Snowdepth</td>
					<td style="padding-left:20px"><i class="fa fa-blind"></i></td>
					<td>@forecast.Comment</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
 
	Measurement[] forecasts;
	protected override async Task OnInitializedAsync()
	{
		forecasts = await MeasurementService.GetMeasurementsAsync();
	}
}
